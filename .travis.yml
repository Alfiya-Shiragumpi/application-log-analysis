---
language: go

services:
  - docker

env:
  global:
  - IMAGE_NAME=tutorial-application-log-analysis
  - NAMESPACE_SOS=ikswhp_multiarch
  - REGISTRY_URL=icr.io
  - IMAGE_PUSH_NAME=icr.io/ikswhp_multiarch/tutorial-application-log-analysis:${TRAVIS_COMMIT}

before_install:
- curl -s "https://s3.us.cloud-object-storage.appdomain.cloud/armada-build-tools-prod-us-geo/build-tools/build-tools.tar.gz" |tar -xvz
- ./build-tools/install.sh
- DOCKER_CLI_EXPERIMENTAL=enabled
- DOCKER_BUILDKIT=1 docker build --help
- mkdir -p ~/.docker/cli-plugins
- wget https://github.com/docker/buildx/releases/download/v0.9.1/buildx-v0.9.1.linux-amd64
- chmod a+x buildx-v0.9.1.linux-amd64
- mv buildx-v0.9.1.linux-amd64 ~/.docker/cli-plugins/docker-buildx
- docker buildx create --use --name multi-builder --platform linux/amd64,linux/s390x
- docker login "icr.io" --username "iamapikey" --password-stdin <<< "${registry_iam_api_key}"

jobs:
  include:
    - stage: Build and push image to registry
      env:
      - IMAGE_NAME-amd64=icr.io/ikswhp_multiarch/tutorial-application-log-analysis:${TRAVIS_COMMIT}-amd64
      - IMAGE_NAME-s390x=icr.io/ikswhp_multiarch/tutorial-application-log-analysis:${TRAVIS_COMMIT}-s390x
      script: 
      - ./build.sh
      - sudo -E su $USER -c "docker pull ${IMAGE_NAME-amd64}"
      - sudo -E su $USER -c "docker pull ${IMAGE_NAME-s390x}"
      - sudo -E su $USER -c "docker manifest create ${IMAGE_PUSH_NAME} ${IMAGE_NAME-s390x} ${IMAGE_NAME-amd64}"
      - sudo -E su $USER -c "docker manifest annotate --arch s390x ${IMAGE_PUSH_NAME} ${IMAGE_NAME-s390x}"
      - sudo -E su $USER -c "docker manifest push ${IMAGE_PUSH_NAME}"


